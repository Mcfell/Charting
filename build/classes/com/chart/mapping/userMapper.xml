<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.chart.Mapper.UserMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是user表所对应的实体类
    -->
    <!-- 
        根据id查询得到一个user对象
     -->
    <select id="selectUser" parameterType="int" resultType="com.chart.bean.User">
        select * from user where id=#{id}
    </select>
     <!-- 创建用户(Create) -->
  <insert id="insertUser" parameterType="com.chart.bean.User">
       insert into user(nickname,password) values(#{nickname},#{password})
  </insert>
     
     <!-- 删除用户(Remove) -->
    <delete id="deleteUser" parameterType="int">
        delete from user where id=#{id}
     </delete>
     <!-- 修改用户(Update) -->
     <update id="updateUser" parameterType="com.chart.bean.User">
     	 update user set 
     	<if test="nickename!=null">
        	nickname=#{nickname},
        </if>
        <if test="password!=null">
        	password=#{password},
        </if>
        <if test="phone!=null">
        	phone=#{phone},
        </if>
        <if test="rank !=null">
        	rank=#{rank},
        </if>
        <if test="winNum !=null">
        	winNum=#{winNum},
        </if>
        <if test="#{loseNum}!=null">
        	loseNum=#{loseNum},
        </if>
        <if test="#{level}!=null">
        	level=#{level} 
        </if>
         where id=#{id}
     </update>
     
     <!-- 查询全部用户-->
     <select id="selectAll" resultType="com.chart.bean.User">
         select * from user
     </select>
</mapper>